version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    environment:
       PKGS: "cdms2 cdat_info testsrunner udunits2"
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       if [[ $PY_VER = "py2" ]]; then
          conda create -n $PY_VER $CHANNELS $PKGS "python<3" $CONDA_COMPILERS
       else
          conda create -n $PY_VER $CHANNELS $PKGS "python>3" $CONDA_COMPILERS coverage coveralls
       fi

  - &setup_genutil
    name: setup_genutil
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       set +e
       source activate $PY_VER
       set -e
       export LDSHARED="$CC ${LDSHARED_FLAGS}"
       LDSHARED=${LDSHARED} python setup.py install
       rm -rf build

  - &run_genutil_tests
    name: run_genutil_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       set +e
       source activate $PY_VER
       set -e
       python run_tests.py -H -v2 $COVERAGE
       RESULT=$?
       echo "*** $PY_VER test result: "${RESULT}
       exit $RESULT

  - &run_coveralls
    name: run_coveralls
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate $PY_VER
       coveralls
       source deactivate

  - &conda_upload
    name: conda_upload
    environment:
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
       if [[ $CIRCLE_BRANCH != 'master' ]]; then
          exit 0
       fi
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       export PKG_NAME=genutil
       export USER=cdat
       export VERSION=8.1
       export LABEL=nightly
       python ./prep_for_build.py -l $VERSION
       if [[ $PY_VER = 'py2' ]]; then
          conda build $PKG_NAME $CHANNELS
       else
          conda build $PKG_NAME $CHANNELS --python=3.6
       fi
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/$OS/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force
 
jobs:
  macos_genutil_py2:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_genutil_py2"
      OS: "osx-64"
      PY_VER: "py2"
      CONDA_COMPILERS: "clang_osx-64 gfortran_osx-64"
      LDSHARED_FLAGS: "-bundle -undefined dynamic_lookup"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_genutil
      - run: *run_genutil_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html

  macos_genutil_py3:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_genutil_py3"
      OS: "osx-64"
      PY_VER: "py3"
      CONDA_COMPILERS: "clang_osx-64 gfortran_osx-64"
      LDSHARED_FLAGS: "-bundle -undefined dynamic_lookup"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_genutil
      - run: *run_genutil_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html

  linux_genutil_py2:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_genutil_py2"
      OS: "linux-64"
      PY_VER: "py2"
      CONDA_COMPILERS: "gcc_linux-64 gfortran_linux-64"
      LDSHARED_FLAGS: "-shared -pthread"
    steps:
      - checkout
      - run: *setup_miniconda 
      - run: *create_conda_env
      - run: *setup_genutil
      - run: *run_genutil_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html

  linux_genutil_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_genutil_py3"
      OS: "linux-64"
      PY_VER: "py3"
      CONDA_COMPILERS: "gcc_linux-64 gfortran_linux-64"
      LDSHARED_FLAGS: "-shared -pthread"
      COVERAGE: "-c tests/coverage.json"
    steps:
      - checkout
      - run: *setup_miniconda 
      - run: *create_conda_env
      - run: *setup_genutil
      - run: *run_genutil_tests
      - run: *run_coveralls
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html

workflows:
  version: 2
  genutil:
    jobs:
      - macos_genutil_py2
      - macos_genutil_py3:
           requires:
              - macos_genutil_py2
      - linux_genutil_py2
      - linux_genutil_py3:
           requires:
              - linux_genutil_py2
